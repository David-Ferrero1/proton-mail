@import '~design-system/_sass/reusable-components/_design-system-config.scss';

.composer {
    position: absolute;
    bottom: 0;
    z-index: 300;

    height: 520px;
    width: 600px;
    overflow: hidden;

    background: var(--bgcolor-main-area, $pm-global-altgrey);
    box-shadow: 0 0 16px 3px rgba(black, 0.16);
    border-radius: $global-border-radius $global-border-radius 0 0;
    color: var(--color-main-area, $pm-global-grey);

    transition: 0.15s easing(easeOutQuint);

    .composer-content {
        min-height: 10em;
    }
}

.composer--is-blur {
    --blur-opacity: 0.25;

    box-shadow: 0 0 5px 3px rgba(black, 0.16);

    .composer-title-bar {
        background: var(--bg-color-main-area, $pm-global-grey);

        & > * {
            opacity: var(--blur-opacity);
        }
    }

    .composer-blur-container {
        opacity: var(--blur-opacity);
        pointer-events: none;
    }
}

.composer--is-minimized {
    height: 2.5em; // title bar height
}

.composer-title-bar {
    background: var(--bgcolor-main-area, $pm-global-altgrey);
    transition: background 0.15s ease-out;

    & > * {
        transition: opacity 0.15s ease-out;
    }
}

.composer-title-bar-tooltip {
    align-self: stretch;
    justify-content: stretch;
    align-items: stretch;
}

.composer-title-bar-button {
    &:hover,
    &:focus {
        background-color: rgba(white, 0.05);
    }
}

.composer-container {
    overflow: hidden;
    background: var(--bgcolor-main-area, $white);
}

.composer-blur-container {
    transition: opacity 0.15s ease-out;
}

.composer-meta-label,
.pm-label.composer-meta-label {
    max-width: 8em;
    width: 15%;
    @include respond-to($breakpoint-small) {
        // temporary workaround
        width: 25%;
    }
}

.composer-meta .composer-addresses-fakefield {
    min-height: 3.5rem;
    max-height: 2.5em;
    padding-right: 5em;
}

.composer-addresses-container-line:not(:first-child) {
    padding-right: 3rem;
}

.composer-addresses-container {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    position: relative;
    max-height: 100px;
    overflow-y: auto;
    overflow-x: hidden;

    &.pm-field {
        padding: 0.25em 0.5em;
    }

    &.composer-addresses-container-closed {
        padding-right: 5em;
    }

    &::after {
        // trick to keep space in case of loooooooong email with scroll and last one
        content: '';
        width: 100%;
        height: 0.1rem;
    }

    .pm-field {
        border: none;
        padding: 0;
        min-width: 10rem;
        background: inherit;

        &:focus {
            box-shadow: none;
        }
    }
}

.composer-addresses-autocomplete {
    ul {
        position: absolute;
        left: 0;
        top: calc(100% + 5px);
        z-index: 10;
        list-style: none;
        box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.16);
        background: var(--bgcolor-input, $pm-input-background);
        width: calc(100% - 40px);
        margin: 0 0 0 20px;
        padding: 0;

        max-height: 20rem;
        overflow-y: auto;
    }

    li {
        cursor: pointer;
        padding: 0.5em;

        &[aria-selected='true'] {
            background-color: rgba($pm-primary, 0.2);
        }

        &:hover {
            background-color: var(--bordercolor-input, $autocomplete-bg-color-hover);
        }
    }

    .visually-hidden {
        position: absolute;
        clip: rect(0, 0, 0, 0);
    }
}

.composer-addresses-input-container {
    // Here I tried to keep pm-field height only with margin calculations
    margin: calc(#{em(6)} - 0.25em) 0.5em calc(#{em(6)} - 0.25em) calc(#{em(16)} - 0.5em);
}

.composer-addresses-item {
    background-color: var(--bgcolor-item-column-list, $pm-global-light);
    text-shadow: none;
    + .composer-addresses-input-container {
        margin-left: 0;
        margin-top: calc(0.25em + 1px);
        margin-bottom: calc(0.25em + 1px);
    }
}

.composer-addresses-item.invalid {
    border-color: $pm-global-warning;
    color: $pm-global-warning;

    .composer-addresses-item-label {
        border-right-color: currentColor;
    }
}

.composer-addresses-item-label,
.composer-addresses-item-icon {
    border-right: 1px solid var(--bordercolor-input, $pm-global-border);
}

.composer-addresses-item-remove {
    &.pm-button {
        padding: 0 0.5em;
        border: none;
    }
}

.composer-addresses-ccbcc {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0.5em;
}

.addresses-contacts-table {
    th:first-child {
        width: 3.5rem;
    }
}

.composer-editor-embedded {
    overflow: hidden;
    z-index: 1500; // ask Embedding should always be on top of the toolbar!
    //background: var(--bgcolor-main-area, #f5f5f5);
    color: var(--color-main-area, $pm-global-grey);
    text-align: center;

    &::before {
        content: '';
        position: absolute;
        z-index: 3;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba($white, 0.5);
        backdrop-filter: blur(3px);
    }

    .pm-modal {
        z-index: 667;
        footer {
            padding-bottom: 0.5em;
        }
    }
    .pm-modalHeader {
        padding-top: 0.5em;
    }

    .pm-modalTitle {
        padding-right: 0;
    }

    // TODO: Add the image icon in background
}

.composer-editor-dropzone {
    border: 5px dashed var(--bordercolor-input, $pm-global-border);
    background: var(--bgcolor-main-area, $white);
    opacity: 0.85;

    &-text {
        font-size: 2em;
        opacity: 0.75;
    }
}

.composer-body-container textarea {
    resize: none;
    font-family: $font-family-monospace;
}

.composer-attachments-button-wrapper {
    position: relative;
    overflow: hidden;
    display: inline-block;
    padding: 5px; // hack to save space for the hover halo on the button
    margin: -5px;

    input[type='file'] {
        position: absolute;
        opacity: 0;
    }

    input[type='file']:hover + .pm-button,
    input[type='file']:focus + .pm-button,
    input[type='file']:focus-within + .pm-button {
        color: $pm-global-grey;
        box-shadow: 0 0 em(5) 0 rgba(0, 0, 0, 0.2);
    }

    input[type='file']:active + .pm-button {
        background: radial-gradient(closest-side, $white, $pm-global-border 90%);
        box-shadow: none;
    }
}

.composer .editor-squire-wrapper {
    background: $white;
}

.editor-squire-wrapper,
.editor-ellipsis-button-container {
    border-bottom-left-radius: $global-border-radius;
    border-bottom-right-radius: $global-border-radius;
}
.composer-content--has-attachments,
.editor--showEllipsisButton {
    .editor,
    .editor::after,
    .editor-squire-wrapper {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
}
.composer-content--has-attachments {
    .editor-ellipsis-button-container {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
}

.composer-attachments-expand {
    overflow: auto;
    border-top: 1px solid var(--bordercolor-input, $pm-global-border);
    max-height: 6.5em;
}

.composer-attachments-list {
    border-left: 1px solid var(--bordercolor-input, $pm-global-border);
    border-right: 1px solid var(--bordercolor-input, $pm-global-border);
    border-bottom: 1px solid var(--bordercolor-input, $pm-global-border);
    border-bottom-left-radius: $global-border-radius;
    border-bottom-right-radius: $global-border-radius;
}

.composer-attachments-item {
    margin-top: 0.5em;
    width: 50%;

    &:first-child,
    &:nth-child(2) {
        margin-top: 0;
    }
    &:nth-child(even) {
        padding-left: 0.5em;
    }
    &:nth-child(odd) {
        padding-right: 0.5em;
    }
    // fix on last only if there are more than 4
    &:nth-child(n + 5):last-child {
        padding-bottom: 0.5em;
    }

    &--uploadInProgress {
        .composer-attachments-item-typeIcon,
        .composer-attachments-item-deleteButton {
            border: 0;
        }
    }
}

.composer-inner-modal .pm-modal {
    width: 90%;
    height: 90%;
    max-height: 90%;
}

/*
 * footer = action buttons
 */

.composer-actions--has-scroll {
    margin-top: 0.5em;
    padding-top: 0.5em;
    box-shadow: 0 -5px 5px 0 rgba(0, 0, 0, 0.1);
}

// Keep minimal size when activity label is empty
.composer-send-button {
    min-height: 3.4rem;
    min-width: 4rem;
    @include respond-to($breakpoint-small) {
        min-width: 0;
    }
}
