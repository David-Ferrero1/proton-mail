@import '~design-system/_sass/reusable-components/_design-system-config.scss';

.composer {
    position: absolute;
    bottom: 1rem;
    z-index: 300;

    height: 520px;
    width: 600px;

    background: var(--bgcolor-main-area, $white);
    box-shadow: 0 0 16px 3px rgba(0, 0, 0, 0.16);
    color: var(--color-main-area, $pm-global-grey);
}

.composer-blur * {
    opacity: 0.8;
}

.composer-title-bar {
    width: calc(100% + 1em);
    padding: 0.5em;
    margin-top: -0.5em;
    margin-bottom: 0.5em;
    margin-left: -0.5em;

    background: var(--bgcolor-main-area, $pm-global-altgrey);
    color: $white;
}

.composer-minimized {
    bottom: 0;
    .composer-title-bar {
        margin-bottom: 0;
    }
}

.pm-button.composer-title-bar-button {
    padding: 0 0.5em;
    background: unset;
    border: unset;
    border-radius: unset;

    display: flex;
    color: $white;
}

.pm-button.composer-title-bar-button:hover,
.pm-button.composer-title-bar-button:active {
    box-shadow: unset;
}

.composer-meta-label,
.pm-label.composer-meta-label {
    max-width: 8em;
    width: 15%;
}

.composer-meta-label .pm-label {
    padding-top: 7px;
    padding-bottom: 7px;

    &:not(:first-child) {
        margin-top: 7px;
    }
}

.composer-meta .composer-addresses-fakefield {
    padding: 6px 0.85em;
    min-height: 35px;
    max-height: 2.5em;
    background: var(--bgcolor-input, $pm-input-background);
}
.composer-addresses-fakefield-inner {
    max-width: calc(100% - 5em);
}

.composer-addresses-container-line:not(:first-child) {
    padding-right: 30px;
}

.composer-addresses-container {
    display: flex;
    flex-wrap: wrap;
    min-height: 2.6rem;
    vertical-align: middle;
    width: 100%;
    position: relative;
    max-height: 100px;
    overflow-y: auto;
    overflow-x: hidden;

    padding-top: 6px;
    padding-bottom: 1px;

    .pm-field {
        border: none;
        padding: 0;
        min-width: 10rem;
        background: inherit;

        &:focus {
            box-shadow: none;
        }
    }
}

.composer-addresses-autocomplete {
    ul {
        position: absolute;
        left: 0;
        top: calc(100% + 5px);
        z-index: 10;
        list-style: none;
        box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.16);
        background: var(--bgcolor-input, $pm-input-background);
        width: calc(100% - 40px);
        margin: 0 0 0 20px;
        padding: 0;
    }

    li {
        cursor: pointer;
        padding: 0.5em;

        &[aria-selected='true'] {
            background-color: rgba($pm-primary, 0.2);
        }
    }

    .visually-hidden {
        position: absolute;
        clip: rect(0, 0, 0, 0);
    }
}

.composer-addresses-item {
    background-color: var(--bgcolor-item-column-list, #f6f7fa);
    margin-bottom: 5px;
    margin-right: 5px;
    text-shadow: none;
}

.composer-addresses-item.invalid {
    border-color: $pm-global-warning;
    color: $pm-global-warning;

    .composer-addresses-item-label {
        border-right-color: currentColor;
    }
}

.composer-addresses-item-label,
.composer-addresses-item-icon {
    border-right: 1px solid var(--bordercolor-input, $pm-global-border);
}

.composer-addresses-ccbcc {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 1em;
}

.addresses-contacts-table {
    th:first-child {
        width: 35px;
    }
}

.editor {
    border: 1px solid var(--bordercolor-input, $pm-global-border);
    textarea {
        color: currentColor;
    }
    .editor-toolbar-button {
        padding: 0.3em 0.5em;
        min-height: 2.1em;
        &:focus,
        &:hover,
        &[aria-pressed='true'] {
            background-color: var(--bordercolor-input, $pm-global-border);
        }
    }
}

.editor-toolbar {
    border-bottom: 1px solid var(--bordercolor-input, $pm-global-border);
}
.editor-toolbar-separator {
    border-left: 1px solid var(--bordercolor-input, $pm-global-border);
}

.editor-toolbar-dropdown {
    ul {
        margin: 0;
    }

    button {
        padding-left: .5em;
        padding-right: .5em;
    }

    button:disabled {
        background-color: $pm-global-muted;
    }
}

.editor-toolbar-dropdown .ColorSelector-item {
    height: 2.8rem;
    width: 2.8rem;
    margin: 0 .2rem .2rem 0;
}

.editor--disabled::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #eeee;
    border-radius: 3px;
}

/**
 * Definitely a hacky workaround
 * But react-components doesn't allow (yet) to add classes on the li element of a DropdownMenu
 */
.editor-toolbar-more-menu {
    li:nth-child(2) {
        border-top: none;
    }
    li:nth-child(4) {
        border-top: none;
    }
}

.composer-editor-embedded {
    overflow: hidden;
    z-index: 15000; // ask Embedding should always be on top of the toolbar!
    background: var(--bgcolor-main-area, #f5f5f5);
    color: var(--color-main-area, #505061);
    text-align: center;

    // TODO: Add the image icon in background
}

.composer-editor-dropzone {
    background: var(--bgcolor-main-area, #f5f5f5);
    color: var(--color-main-area, #505061);

    // TODO: Something more sexy? :)
}

.editor-toolbar-button {
    padding: 0.5em;
    > span {
        margin-left: 0;
        margin-right: 0;
        width: 100%;
        display: flex;
        align-items: center;
        > .mr0-5 {
            flex: 1 1 0px;
            text-align: left;
            display: inline-flex;
        }
    }
}

.composer-attachments-button-wrapper {
    position: relative;
    overflow: hidden;
    display: inline-block;
    padding: 5px; // hack to save space for the hover halo on the button
    margin: -5px;

    input[type='file'] {
        font-size: 2.2rem;
        margin: 5px;
        position: absolute;
        left: 0;
        top: 0;
        opacity: 0;
        cursor: pointer;
    }

    input[type='file']:hover + .pm-button,
    input[type='file']:focus + .pm-button,
    input[type='file']:focus-within + .pm-button {
        color: $pm-global-grey;
        box-shadow: 0 0 em(5) 0 rgba(0, 0, 0, 0.2);
    }

    input[type='file']:active + .pm-button {
        background: radial-gradient(closest-side, $white, $pm-global-border 90%);
        box-shadow: none;
    }
}

// Keep minimal size when activity label is empty
.composer-send-button {
    min-height: 34px;
    min-width: 39px;
}

.composer-attachments-expand {
    overflow: auto;
    border-top: 1px solid var(--bordercolor-input, $pm-global-border);
}

.composer-attachments-item {
    margin-top: 10px;
    width: 50%;

    &:first-child,
    &:nth-child(2) {
        margin-top: 0;
    }
    &:nth-child(even) {
        padding-left: 5px;
    }
    &:nth-child(odd) {
        padding-right: 5px;
    }
}

.composer-inner-modal .pm-modal {
    width: 90%;
    height: 90%;
    max-height: 90%;
}
